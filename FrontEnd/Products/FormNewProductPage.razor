@page "/Products/new"
@using System.ComponentModel.DataAnnotations
@using FrontEnd.Models
@inject HttpClient httpClient

<h3>Cadastro de novo produto</h3>

<EditForm Model="@newProduct" OnValidSubmit="OnValidSubmit">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12" sm="7">
            <MudCard>
                <MudCardContent>
                    <MudTextField Label="Nome" HelperText="Min. 4 caracteres"
                                  @bind-Value="newProduct.Name" For="@(() => newProduct.Name)" />
                    <MudTextField Label="Descrição" Class="mt-3"
                                  @bind-Value="newProduct.Description" For="@(() => newProduct.Description)" />
                    <MudTextField Label="Quantidade" HelperText="Adicione a quantidade desse produto" Class="mt-3"
                                  @bind-Value="newProduct.Amount" For="@(() => newProduct.Amount)" InputType="InputType.Number" />
                    <MudTextField Label="Preço" HelperText="Adicione o valor do produto" Class="mt-3"
                                  @bind-Value="newProduct.Price" For="@(() => newProduct.Price)" InputType="InputType.Number" />
                </MudCardContent>
                <MudCardActions>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Cadastrar</MudButton>
                </MudCardActions>
            </MudCard>
        </MudItem>
        <MudItem xs="12" sm="5">
            <MudPaper Class="pa-4 mud-height-full">
                <MudText Typo="Typo.subtitle2">Resumo de Validação</MudText>
                @if (success)
                {
                    <MudText Color="Color.Success">Produto cadastrado com sucesso!</MudText>
                }
                else if (error)
                {
                    <MudText Color="Color.Error">Ocorreu um erro ao cadastrar o produto.</MudText>
                }
                else
                {
                    <MudText Color="Color.Error">
                        <ValidationSummary />
                    </MudText>
                }
            </MudPaper>
        </MudItem>
    </MudGrid>

</EditForm>

@code {
    Product newProduct = new Product();

    bool success;
    bool error;

    private async Task OnValidSubmit(EditContext context)
    {
        success = false;
        error = false;

        try
        {
            var response = await httpClient.PostAsJsonAsync("https://localhost:7008/RawMaterials/new", newProduct);

            if (response.IsSuccessStatusCode)
            {
                success = true;
            }
            else
            {
                error = true;
            }
        }
        catch (Exception)
        {
            error = true;
        }

        StateHasChanged();
    }
}
